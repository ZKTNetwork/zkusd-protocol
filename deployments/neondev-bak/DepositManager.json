{
  "address": "0x5646b0A0E8CF59051275881652AFD9D500851c05",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "DepoistRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "EnableRefund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "RefundRecord",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_zkusdToken",
          "type": "address"
        }
      ],
      "name": "ZKUSDTokenChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_enableOrNot",
          "type": "bool"
        }
      ],
      "name": "enableRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zkusdToken",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zkusdToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0a290157f898f275b6d76b2d4e3682ba3ae1bf3a07de2de384d5cdddaf3f6359",
  "receipt": {
    "to": null,
    "from": "0x256dB3D00b3338f118a58dC95a6076bc5022Ba01",
    "contractAddress": "0x5646b0A0E8CF59051275881652AFD9D500851c05",
    "transactionIndex": 0,
    "gasUsed": "33335560",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc41cd6807d5ea31404d4eb2338d4396c99e70581c45f412971b965bbf8f6bb5c",
    "transactionHash": "0x0a290157f898f275b6d76b2d4e3682ba3ae1bf3a07de2de384d5cdddaf3f6359",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 228339944,
        "transactionHash": "0x0a290157f898f275b6d76b2d4e3682ba3ae1bf3a07de2de384d5cdddaf3f6359",
        "address": "0x5646b0A0E8CF59051275881652AFD9D500851c05",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000256db3d00b3338f118a58dc95a6076bc5022ba01"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc41cd6807d5ea31404d4eb2338d4396c99e70581c45f412971b965bbf8f6bb5c"
      }
    ],
    "blockNumber": 228339944,
    "cumulativeGasUsed": "33335560",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "86ff82a7dcea9d0b86c350418d855a56",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"DepoistRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"EnableRefund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"RefundRecord\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_zkusdToken\",\"type\":\"address\"}],\"name\":\"ZKUSDTokenChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enableOrNot\",\"type\":\"bool\"}],\"name\":\"enableRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zkusdToken\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkusdToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/DepositManager.sol\":\"DepositManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/common/DepositManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IZKUSDToken {\\n    function mintToDeposit(address _account, uint256 _amount) external;\\n\\n    function burnFromDeposit(address _account, uint256 _amount) external;\\n\\n    function balanceOf(address _account) external returns (uint256);\\n}\\n\\ncontract DepositManager is Ownable {\\n    receive() external payable {}\\n\\n    address public zkusdToken;\\n    bool public refundAllowed;\\n    event ZKUSDTokenChange(address _zkusdToken);\\n    event DepoistRecord(\\n        address indexed account,\\n        uint256 amountIn,\\n        uint256 amountBorrowed\\n    );\\n    event RefundRecord(\\n        address indexed account,\\n        uint256 amountOut,\\n        uint256 amountBorrowed\\n    );\\n    event EnableRefund(bool allowed);\\n\\n    function setAddress(address _zkusdToken) external onlyOwner {\\n        zkusdToken = _zkusdToken;\\n        emit ZKUSDTokenChange(_zkusdToken);\\n    }\\n\\n    constructor() {\\n        refundAllowed = false;\\n    }\\n\\n    uint256 NEON_ZKUSD_RATE = 1000;\\n\\n    function deposit(uint256 amount) public payable {\\n        require(zkusdToken != address(0), \\\"DepositManager: not initialize\\\");\\n        require(\\n            msg.value > 0 && msg.value == amount,\\n            \\\"DepositManager: invalid deposit value\\\"\\n        );\\n        uint256 amountToMint = amount * NEON_ZKUSD_RATE;\\n        IZKUSDToken(zkusdToken).mintToDeposit(msg.sender, amountToMint);\\n        emit DepoistRecord(msg.sender, amount, amountToMint);\\n    }\\n\\n    function refund(uint256 amount) external {\\n        require(refundAllowed == true, \\\"DepositManager: Not allowed\\\");\\n        require(\\n            IZKUSDToken(zkusdToken).balanceOf(msg.sender) >= amount,\\n            \\\"DepositManager: insufficient amount\\\"\\n        );\\n        IZKUSDToken(zkusdToken).burnFromDeposit(msg.sender, amount);\\n        uint256 amountOut = amount / NEON_ZKUSD_RATE;\\n        payable(msg.sender).transfer(amountOut);\\n        emit RefundRecord(msg.sender, amountOut, amount);\\n    }\\n\\n    function enableRefund(bool _enableOrNot) external onlyOwner {\\n        refundAllowed = _enableOrNot;\\n        emit EnableRefund(_enableOrNot);\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        payable(msg.sender).transfer(balance);\\n    }\\n\\n    function withdrawToken(address token) external onlyOwner {\\n        IERC20(token).transfer(\\n            msg.sender,\\n            IERC20(token).balanceOf(address(this))\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0xbbaf48b8fd53a7970dc5d773d47fd7a5b2e48f9698a5c32a4589b59544fc3527\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526103e860025534801561001657600080fd5b5061002033610032565b6001805460ff60a01b19169055610082565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6109eb806100916000396000f3fe6080604052600436106100b05760003560e01c8063715018a611610074578063b6b55f251161004e578063b6b55f25146101d4578063e30081a0146101e7578063f2fde38b1461020757600080fd5b8063715018a61461018157806389476069146101965780638da5cb5b146101b657600080fd5b8063045179ab146100bc578063278ecde1146100de57806335a3f707146100fe5780633ccfd60b1461013b5780633fa911ae1461015057600080fd5b366100b757005b600080fd5b3480156100c857600080fd5b506100dc6100d73660046108f5565b610227565b005b3480156100ea57600080fd5b506100dc6100f9366004610919565b610287565b34801561010a57600080fd5b5060015461011e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014757600080fd5b506100dc610496565b34801561015c57600080fd5b5060015461017190600160a01b900460ff1681565b6040519015158152602001610132565b34801561018d57600080fd5b506100dc6104d1565b3480156101a257600080fd5b506100dc6101b1366004610932565b6104e5565b3480156101c257600080fd5b506000546001600160a01b031661011e565b6100dc6101e2366004610919565b6105e6565b3480156101f357600080fd5b506100dc610202366004610932565b610754565b34801561021357600080fd5b506100dc610222366004610932565b6107b7565b61022f610830565b60018054821515600160a01b0260ff60a01b199091161790556040517f0e891487e0c6021da4210ae633ca7294c350598970fe3049eac61fe431fc4f3e9061027c90831515815260200190565b60405180910390a150565b60018054600160a01b900460ff161515146102e95760405162461bcd60e51b815260206004820152601b60248201527f4465706f7369744d616e616765723a204e6f7420616c6c6f776564000000000060448201526064015b60405180910390fd5b6001546040516370a0823160e01b815233600482015282916001600160a01b0316906370a08231906024016020604051808303816000875af1158015610333573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610357919061095b565b10156103b15760405162461bcd60e51b815260206004820152602360248201527f4465706f7369744d616e616765723a20696e73756666696369656e7420616d6f6044820152621d5b9d60ea1b60648201526084016102e0565b60015460405163729551d160e01b8152336004820152602481018390526001600160a01b039091169063729551d190604401600060405180830381600087803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b505050506000600254826104259190610974565b604051909150339082156108fc029083906000818181858888f19350505050158015610455573d6000803e3d6000fd5b50604080518281526020810184905233917ffaa8a6a72ac31c50f824f4e2d63cd37a2aff2b827e2ec0538c2922e7de3a399a91015b60405180910390a25050565b61049e610830565b6040514790339082156108fc029083906000818181858888f193505050501580156104cd573d6000803e3d6000fd5b5050565b6104d9610830565b6104e3600061088a565b565b6104ed610830565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f919061095b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610996565b6001546001600160a01b031661063e5760405162461bcd60e51b815260206004820152601e60248201527f4465706f7369744d616e616765723a206e6f7420696e697469616c697a65000060448201526064016102e0565b60003411801561064d57508034145b6106a75760405162461bcd60e51b815260206004820152602560248201527f4465706f7369744d616e616765723a20696e76616c6964206465706f7369742060448201526476616c756560d81b60648201526084016102e0565b6000600254826106b791906109b3565b6001546040516330f91e8d60e01b8152336004820152602481018390529192506001600160a01b0316906330f91e8d90604401600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b505060408051858152602081018590523393507fdd528236baf02c2aef8ba69a7b9ed859e324d190b20058a66deaa3c20fd878b992500161048a565b61075c610830565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f4a6e2a3473f79602f3cde37d79b4c5937b724aa87229cafedcb60b72ded619709060200161027c565b6107bf610830565b6001600160a01b0381166108245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e0565b61082d8161088a565b50565b6000546001600160a01b031633146104e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e0565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b801515811461082d57600080fd5b60006020828403121561090757600080fd5b8135610912816108e7565b9392505050565b60006020828403121561092b57600080fd5b5035919050565b60006020828403121561094457600080fd5b81356001600160a01b038116811461091257600080fd5b60006020828403121561096d57600080fd5b5051919050565b60008261099157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109a857600080fd5b8151610912816108e7565b80820281158282048414176109d857634e487b7160e01b600052601160045260246000fd5b9291505056fea164736f6c6343000811000a",
  "deployedBytecode": "0x6080604052600436106100b05760003560e01c8063715018a611610074578063b6b55f251161004e578063b6b55f25146101d4578063e30081a0146101e7578063f2fde38b1461020757600080fd5b8063715018a61461018157806389476069146101965780638da5cb5b146101b657600080fd5b8063045179ab146100bc578063278ecde1146100de57806335a3f707146100fe5780633ccfd60b1461013b5780633fa911ae1461015057600080fd5b366100b757005b600080fd5b3480156100c857600080fd5b506100dc6100d73660046108f5565b610227565b005b3480156100ea57600080fd5b506100dc6100f9366004610919565b610287565b34801561010a57600080fd5b5060015461011e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014757600080fd5b506100dc610496565b34801561015c57600080fd5b5060015461017190600160a01b900460ff1681565b6040519015158152602001610132565b34801561018d57600080fd5b506100dc6104d1565b3480156101a257600080fd5b506100dc6101b1366004610932565b6104e5565b3480156101c257600080fd5b506000546001600160a01b031661011e565b6100dc6101e2366004610919565b6105e6565b3480156101f357600080fd5b506100dc610202366004610932565b610754565b34801561021357600080fd5b506100dc610222366004610932565b6107b7565b61022f610830565b60018054821515600160a01b0260ff60a01b199091161790556040517f0e891487e0c6021da4210ae633ca7294c350598970fe3049eac61fe431fc4f3e9061027c90831515815260200190565b60405180910390a150565b60018054600160a01b900460ff161515146102e95760405162461bcd60e51b815260206004820152601b60248201527f4465706f7369744d616e616765723a204e6f7420616c6c6f776564000000000060448201526064015b60405180910390fd5b6001546040516370a0823160e01b815233600482015282916001600160a01b0316906370a08231906024016020604051808303816000875af1158015610333573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610357919061095b565b10156103b15760405162461bcd60e51b815260206004820152602360248201527f4465706f7369744d616e616765723a20696e73756666696369656e7420616d6f6044820152621d5b9d60ea1b60648201526084016102e0565b60015460405163729551d160e01b8152336004820152602481018390526001600160a01b039091169063729551d190604401600060405180830381600087803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b505050506000600254826104259190610974565b604051909150339082156108fc029083906000818181858888f19350505050158015610455573d6000803e3d6000fd5b50604080518281526020810184905233917ffaa8a6a72ac31c50f824f4e2d63cd37a2aff2b827e2ec0538c2922e7de3a399a91015b60405180910390a25050565b61049e610830565b6040514790339082156108fc029083906000818181858888f193505050501580156104cd573d6000803e3d6000fd5b5050565b6104d9610830565b6104e3600061088a565b565b6104ed610830565b6040516370a0823160e01b81523060048201526001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f919061095b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610996565b6001546001600160a01b031661063e5760405162461bcd60e51b815260206004820152601e60248201527f4465706f7369744d616e616765723a206e6f7420696e697469616c697a65000060448201526064016102e0565b60003411801561064d57508034145b6106a75760405162461bcd60e51b815260206004820152602560248201527f4465706f7369744d616e616765723a20696e76616c6964206465706f7369742060448201526476616c756560d81b60648201526084016102e0565b6000600254826106b791906109b3565b6001546040516330f91e8d60e01b8152336004820152602481018390529192506001600160a01b0316906330f91e8d90604401600060405180830381600087803b15801561070457600080fd5b505af1158015610718573d6000803e3d6000fd5b505060408051858152602081018590523393507fdd528236baf02c2aef8ba69a7b9ed859e324d190b20058a66deaa3c20fd878b992500161048a565b61075c610830565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f4a6e2a3473f79602f3cde37d79b4c5937b724aa87229cafedcb60b72ded619709060200161027c565b6107bf610830565b6001600160a01b0381166108245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102e0565b61082d8161088a565b50565b6000546001600160a01b031633146104e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e0565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b801515811461082d57600080fd5b60006020828403121561090757600080fd5b8135610912816108e7565b9392505050565b60006020828403121561092b57600080fd5b5035919050565b60006020828403121561094457600080fd5b81356001600160a01b038116811461091257600080fd5b60006020828403121561096d57600080fd5b5051919050565b60008261099157634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156109a857600080fd5b8151610912816108e7565b80820281158282048414176109d857634e487b7160e01b600052601160045260246000fd5b9291505056fea164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/common/DepositManager.sol:DepositManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 3231,
        "contract": "contracts/common/DepositManager.sol:DepositManager",
        "label": "zkusdToken",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3233,
        "contract": "contracts/common/DepositManager.sol:DepositManager",
        "label": "refundAllowed",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 3284,
        "contract": "contracts/common/DepositManager.sol:DepositManager",
        "label": "NEON_ZKUSD_RATE",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}